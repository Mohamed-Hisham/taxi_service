<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;de.prob.units.mchBase" org.eventb.texttools.text_lastmodified="1387071920414" org.eventb.texttools.text_representation="machine TaxiMachineRefined refines TaxiMachine  sees Taxi_Context&#10;&#10;variables registered_taxis // set containing all the taxis registered in the system&#10;          busy_taxis // set containg all the occupied (hired) taxis&#10;          penalized_taxis // set containing all the penalized taxis&#10;          bookings // set of all the booking on the system&#10;          accepted_bookings // set of all accpeted bookings&#10;          declined_bookings // set of all declined bookings&#10;          booking_customer // a function relating a booking with its customer&#10;          booking_status // a function relating a booking with its status&#10;          booking_priority // a function relating a booking with its priority&#10;          booking_response // a function relating a booking with the response type it got&#10;          waiting_list // a function relating the bookings of the customer put on waiting list&#10;          reduced_threshold // Global variable for reduced responses threshold&#10;          nonallocation_threshold // Global variable for non-allocated responses threshold&#10;          reduced_warnings // set of reduced responses warnings issued by the system&#10;          nonallocation_warnings // set of non allocated responses warnings issued by the system&#10;          booking_taxi // a function relating a booking with a taxi&#10;          booking_number_of_passengers // a function relating a booking with the number of passengers required for it&#10;&#9;&#9;  taxi_capability // function between a taxi and capabilities offered&#10;          booking_capability // function between a booking and capabilities needed&#10;          bookings_queue // Queue for the bookings&#10;          bookings_pointer // Pointer for the bookings queue&#10;          driver_declined // boolean variable to check if the driver has declined or not&#10;&#10;          taxi_location // a function relating a taxi with its location&#10;          customer_location // pickup location&#10;          booking_location // destination location&#10;          booking_triptype // a function relating a booking with its trip type length&#10;          nearby_taxis_pool // pool containing the nearby taxi with respect to the customer&#10;&#10;invariants&#10;&#9;@inv24 booking_location ∈ BOOKING ⤔ LOCATION // One to one relation between a booking and the destination location (where the customer wants to go)&#10;  &#9;@inv25 taxi_location ∈ registered_taxis ⤔ LOCATION // One to one relation between a taxi and its location&#10;  &#9;@inv26 customer_location ∈ CUSTOMER ⤔ LOCATION // One to one relation between a customer and his/her location (where the customer will be picked from)&#10;  &#9;@inv27 booking_triptype ∈ BOOKING ⤔ TRIP_TYPE // One to one relation between a booking and its trip type (long, short)&#10;&#10;events&#10;  event INITIALISATION // initialising all the set variables and thresholds to their initial values&#10;  extends INITIALISATION&#10;  then&#10;  &#9;@act24 booking_location ≔ ∅&#10;    @act25 taxi_location ≔ ∅&#10;    @act26 customer_location ≔ ∅&#10;    @act27 booking_triptype ≔ ∅&#10;  end&#10;&#10;  event RegisterTaxi // This event registers a taxi with the system&#10;  extends RegisterTaxi&#10;  end&#10;&#10;  event Deregister // This event removes a taxi from the system&#10;  extends Deregister&#10;  then&#10;  &#9;@act2 taxi_location ≔ {taxi} ⩤ taxi_location // removes the taxi with its location&#10;  end&#10;&#10;  event AddBooking // Create the booking to the queue received from the customer with the number of passengers, the pickup location, the destination location and priority&#10;  extends AddBooking&#10;  any destination_location pickup_location&#10;  where&#10;  &#9;@grd21 booking ∉ dom(booking_location) // booking does not have a location relation&#10;  &#9;@grd22 destination_location ∈ LOCATION // destination_location should be of type LOCATION&#10;    @grd23 pickup_location ∈ LOCATION // pickup_location should be of type LOCATION&#10;    @grd24 destination_location ≠ pickup_location&#10;    @grd25 booking ∉ dom(booking_triptype) // booking does not have a trip_type relation&#10;  then&#10;  &#9; @act8 booking_location(booking) ≔ destination_location // Add a new booking_location relation relating both booking and its destination_location&#10;  &#9; @act9 customer_location(customer) ≔ pickup_location // Add a new customer_location relation relating both customer and his pickup location&#10;  &#9; @act10 booking_triptype(booking) ≔ triptype // Add a new booking_triptype relation relating both booking and its triptype&#10;  end&#10;&#10;  event setTripTypetoShort&#10;  // set the triptype of a booking to short by calculating the distance&#10;  // between customer pickup location and dropoff location (destination) if less than 50&#10;    any customer booking customer_pickup customer_destination type trip_length triptypeold&#10;    where&#10;      @grd1 customer ∈ CUSTOMER // customer is of type CUSTOMER set&#10;      @grd2 booking ∈ bookings // booking is of type bookings&#10;      @grd3 (booking ↦ customer) ∈ booking_customer // relation booking_customer between the booking and the customer exists&#10;      @grd4 (customer ↦ customer_pickup) ∈ customer_location // relation customer_location between the customer and his current location (pickup) exists&#10;      @grd5 (booking ↦ customer_destination) ∈ booking_location // relation booking_location between the booking and its destination location exists&#10;      @grd6 customer_pickup ∈ LOCATION // customer_pickup is of type LOCATION set&#10;      @grd7 customer_destination ∈ LOCATION // customer_destination is of type LOCATION set&#10;      @grd8 trip_length ∈ ℕ1 // trip length is a positive natural number&#10;      @grd9 trip_length = distance(customer_pickup ↦ customer_destination) // triplength is the range of the constant function used to model distance between 2 locations&#10;      @grd10 trip_length &lt; 50 // Assume that if the distance is less than 50, then the trip is short&#10;      @grd11 type ∈ TRIP_TYPE // triptype should be of type TRIP_TYPE (to use partition in context axiom)&#10;      @grd12 type ∈ {short} // type belongs to partition subset {short}&#10;      @grd13 triptypeold ∈ TRIP_TYPE // triptypeold should be of type TRIP_TYPE (to use partition in context axiom)&#10;  &#9;  @grd14 triptypeold ∈ {empty} // triptypeold belongs to partition subset {empty}&#10;      @grd15 (booking ↦ triptypeold) ∈ booking_triptype // relation booking_triptype between the booking and its triptype exists&#10;    then&#10;      @act1 booking_triptype(booking) ≔ type // Add a new booking_triptype relation relating both booking and its triptype&#10;  end&#10;&#10;  event setTripTypetoLong&#10;  // set the triptype of a booking to long by calculating the distance&#10;  // between customer pickup location and dropoff location (destination) if equal or greater than 50&#10;    any customer booking customer_pickup customer_destination type trip_length triptypeold&#10;    where&#10;      @grd1 customer ∈ CUSTOMER // customer is of type CUSTOMER set&#10;      @grd2 booking ∈ bookings // booking is of type bookings&#10;      @grd3 (booking ↦ customer) ∈ booking_customer // relation booking_customer between the booking and the customer exists&#10;      @grd4 (customer ↦ customer_pickup) ∈ customer_location // relation customer_location between the customer and his current location (pickup) exists&#10;      @grd8 trip_length ∈ ℕ1 // trip length is a positive natural number&#10;&#9;  @grd9 trip_length = distance(customer_pickup ↦ customer_destination) // triplength is the range of the constant function used to model distance between 2 locations&#10;      @grd10 trip_length ≥ 50 // Assume that if the distance is less than 50, then the trip is short&#10;      @grd11 type ∈ TRIP_TYPE // triptype should be of type TRIP_TYPE (to use partition in context axiom)&#10;      @grd12 type ∈ {long} // type belongs to partition subset {long}&#10;      @grd13 triptypeold ∈ TRIP_TYPE // triptypeold should be of type TRIP_TYPE (to use partition in context axiom)&#10;  &#9;  @grd14 triptypeold ∈ {empty} // triptypeold belongs to partition subset {empty}&#10;      @grd15 (booking ↦ triptypeold) ∈ booking_triptype // relation booking_triptype between the booking and its triptype exists&#10;      @grd16 (booking ↦ customer_destination) ∈ booking_location // relation booking_location between the booking and its destination location exists&#10;      @grd17 customer_pickup ∈ LOCATION // customer_pickup is of type LOCATION set&#10;      @grd18 customer_destination ∈ LOCATION&#10;    then&#10;      @act1 booking_triptype(booking) ≔ type // Add a new booking_triptype relation relating both booking and its triptype&#10;  end&#10;&#10;  event SetCurrentTaxiLocation // sets the current location of the taxi for distance calculation&#10;  any taxi location&#10;  where&#10;  &#9;@grd1 taxi ∈ registered_taxis // taxi must be registered&#10;  &#9;@grd2 location ∈ LOCATION // location must be of type LOCATION set&#10;  then&#10;  &#9;@act1 taxi_location(taxi) ≔ location // adds relation taxi_location of a taxi and its location&#10;  end&#10;&#10;  event ConstructNearByTaxisPool // used to construct the pool of nearby taxis which are near to the customer&#10;  extends ConstructNearByTaxisPool&#10;&#9;  any taxiLocation customerLocation length&#10;&#9;  where&#10;&#9;  &#9;@grd5 taxiLocation ∈ LOCATION // taxiLocation must be of tyoe LOCATION set&#10;&#9;  &#9;@grd6 customerLocation ∈ LOCATION // customerLocation must be of tyoe LOCATION set&#10;&#9;  &#9;@grd7 (taxi ↦ taxiLocation) ∈ taxi_location // relation between a taxi and its location should exists&#10;&#9;  &#9;@grd8 (customer ↦ customerLocation) ∈ customer_location // relation between a customer and his location should exists&#10;&#9;  &#9;@grd9 length ∈ ℕ1 // length must be a positive natural number&#10;&#9;  &#9;@grd10 length ≤ 20 // Assume that taxis with 20 length units are nearby&#10;  end&#10;&#10;  event AddBookingtoQueue // a booking can be added to a queue of bookings&#10;  extends AddBookingtoQueue&#10;  end&#10;&#10;  event AllocateFullTaxiBookingDirect // Allocate a taxi to a booking directly with a full response&#10;  extends AllocateFullTaxiBookingDirect&#10;  end&#10;&#10;  event AllocateFullTaxiBookingFromQueue // Allocate a taxi to a booking from the queue with a full response&#10;  extends AllocateFullTaxiBookingFromQueue&#10;  end&#10;&#10;  event AllocateReducedTaxiBookingDirect // Allocate a taxi to a booking directly with a reduced response&#10;  extends AllocateReducedTaxiBookingDirect&#10;  end&#10;&#10;  event AllocateReducedTaxiBookingFromQueue //Allocate a taxi to a booking from the queue with a reduced response&#10;  extends AllocateReducedTaxiBookingFromQueue&#10;  end&#10;&#10;  event AcceptBookingRequest // driver accepts a booking request so the status of the booking changes from open to accept&#10;  extends AcceptBookingRequest&#10;  end&#10;  event DriverDeclineRequest // The driver declines the booking request after accepting it&#10;  extends DriverDeclineRequest&#10;  end&#10;&#10;  event DeclineBookingRequest // adds the booking declined by the driver to the declined_bookings set&#10;  extends DeclineBookingRequest&#10;  end&#10;&#10;  event PenalizeTaxi // this event penalizes the taxi according to the conditions&#10;  extends PenalizeTaxi&#10;  end&#10;&#10;  event RemoveFromPenalised // removes the taxis from the penalized list at preference&#10;  extends RemoveFromPenalised&#10;  end&#10;&#10;  event AddtoWaitingList // add a customer with his pending booking to the waiting list if he requested a full response&#10;  extends AddtoWaitingList&#10;  end&#10;&#10;  event ChangeBookingPrioritytoHigh //changes the priority of a normal booking in the waiting list to high&#10;  extends ChangeBookingPrioritytoHigh&#10;  end&#10;&#10;  event RemoveFromWaitingList // removes a customer with his booking from the waiting list&#10;  extends RemoveFromWaitingList&#10;  end&#10;&#10;  event comingToCustomer // change booking status from accept to coming&#10;  extends comingToCustomer&#10;  end&#10;&#10;  event pickedUpCustomer // change booking status from coming to picked&#10;  extends pickedUpCustomer&#10;  end&#10;&#10;  event DeliveredCustomer // change booking status from picked to delivered&#10;  extends DeliveredCustomer&#10;  end&#10;&#10;  event AlertReducedWarning // adds a reduced warning to the reduced_warnings list&#10;  extends AlertReducedWarning&#10;  end&#10;&#10;  event RemoveReducedWarning // removes a reduced warning from the reduced_warnings list&#10;  extends RemoveReducedWarning&#10;  end&#10;&#10;  event AlertNoAllocationWarning // adds a non allocation warning to the nonallocation_warnings list&#10;  extends AlertNoAllocationWarning&#10;  end&#10;&#10;  event RemoveNoAllocationWarning // removes a non allocation warning from the nonallocation_warnings list&#10;  extends RemoveNoAllocationWarning&#10;  end&#10;&#10;  event RemoveBooking // After customer is delivered, booking is removed from the system and removing all its relations&#10;  extends RemoveBooking&#10;  then&#10;  &#9;@act11 booking_location ≔ {booking} ⩤ booking_location // remove from booking_location using domain subtraction by the booking&#10;  &#9;@act12 customer_location ≔ {customer} ⩤ customer_location // remove from customer_location using domain subtraction by the booking&#10;  &#9;@act13 booking_triptype ≔ {booking} ⩤ booking_triptype // remove from booking_triptype using domain subtraction by the booking&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="'" org.eventb.core.target="TaxiMachine"/>
<org.eventb.core.seesContext name="(" org.eventb.core.target="Taxi_Context"/>
<org.eventb.core.variable name="*" org.eventb.core.comment="set containing all the taxis registered in the system" org.eventb.core.identifier="registered_taxis"/>
<org.eventb.core.variable name="," org.eventb.core.comment="set containg all the occupied (hired) taxis" org.eventb.core.identifier="busy_taxis"/>
<org.eventb.core.variable name="-" org.eventb.core.comment="set containing all the penalized taxis" org.eventb.core.identifier="penalized_taxis"/>
<org.eventb.core.variable name="." org.eventb.core.comment="set of all the booking on the system" org.eventb.core.identifier="bookings"/>
<org.eventb.core.variable name="/" org.eventb.core.comment="set of all accpeted bookings" org.eventb.core.identifier="accepted_bookings"/>
<org.eventb.core.variable name="0" org.eventb.core.comment="set of all declined bookings" org.eventb.core.identifier="declined_bookings"/>
<org.eventb.core.variable name="2" org.eventb.core.comment="a function relating a booking with its customer" org.eventb.core.identifier="booking_customer"/>
<org.eventb.core.variable name="3" org.eventb.core.comment="a function relating a booking with its status" org.eventb.core.identifier="booking_status"/>
<org.eventb.core.variable name="5" org.eventb.core.comment="a function relating a booking with its priority" org.eventb.core.identifier="booking_priority"/>
<org.eventb.core.variable name="6" org.eventb.core.comment="a function relating a booking with the response type it got" org.eventb.core.identifier="booking_response"/>
<org.eventb.core.variable name="7" org.eventb.core.comment="a function relating the bookings of the customer put on waiting list" org.eventb.core.identifier="waiting_list"/>
<org.eventb.core.variable name="9" org.eventb.core.comment="Global variable for reduced responses threshold" org.eventb.core.identifier="reduced_threshold"/>
<org.eventb.core.variable name=":" org.eventb.core.comment="Global variable for non-allocated responses threshold" org.eventb.core.identifier="nonallocation_threshold"/>
<org.eventb.core.variable name=";" org.eventb.core.comment="set of reduced responses warnings issued by the system" org.eventb.core.identifier="reduced_warnings"/>
<org.eventb.core.variable name="=" org.eventb.core.comment="set of non allocated responses warnings issued by the system" org.eventb.core.identifier="nonallocation_warnings"/>
<org.eventb.core.variable name="_UrVNEVpvEeOf2_JL3Fy0p4" org.eventb.core.comment="a function relating a booking with a taxi" org.eventb.core.identifier="booking_taxi"/>
<org.eventb.core.variable name="_UrVNEVpvEeOf2_JL3Fy0p9" org.eventb.core.comment="a function relating a booking with the number of passengers required for it" org.eventb.core.identifier="booking_number_of_passengers"/>
<org.eventb.core.variable name="_AxmToGHwEeOMZ_9HrMlueQ" org.eventb.core.comment="function between a taxi and capabilities offered" org.eventb.core.identifier="taxi_capability"/>
<org.eventb.core.variable name="_UzeuIGJfEeOMZ_9HrMlueQ" org.eventb.core.comment="function between a booking and capabilities needed" org.eventb.core.identifier="booking_capability"/>
<org.eventb.core.variable name="_oLkFkGP-EeOMwK6AbUC7eA" org.eventb.core.comment="Queue for the bookings" org.eventb.core.identifier="bookings_queue"/>
<org.eventb.core.variable name="_E1RQwGPaEeOMwK6AbUC7eA" org.eventb.core.comment="Pointer for the bookings queue" org.eventb.core.identifier="bookings_pointer"/>
<org.eventb.core.variable name="_oBohwGPjEeOMwK6AbUC7eA" org.eventb.core.comment="boolean variable to check if the driver has declined or not" org.eventb.core.identifier="driver_declined"/>
<org.eventb.core.variable name="_UrVNEVpvEeOf2_JL3Fy0p1" org.eventb.core.comment="a function relating a taxi with its location" org.eventb.core.identifier="taxi_location"/>
<org.eventb.core.variable name="_UrVNEVpvEeOf2_JL3Fy0p2" org.eventb.core.comment="pickup location" org.eventb.core.identifier="customer_location"/>
<org.eventb.core.variable name="_UrVNEVpvEeOf2_JL3Fy0p3" org.eventb.core.comment="destination location" org.eventb.core.identifier="booking_location"/>
<org.eventb.core.variable name="4" org.eventb.core.comment="a function relating a booking with its trip type length" org.eventb.core.identifier="booking_triptype"/>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AB" org.eventb.core.comment="initialising all the set variables and thresholds to their initial values" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_q2KiAGSrEeO0z68jQ4pw7Q" org.eventb.core.assignment="booking_location ≔ ∅" org.eventb.core.label="act24"/>
<org.eventb.core.action name="_q2LJEGSrEeO0z68jQ4pw7Q" org.eventb.core.assignment="taxi_location ≔ ∅" org.eventb.core.label="act25"/>
<org.eventb.core.action name="_kx1BMGJfEeOMZ_9HrMlueQ" org.eventb.core.assignment="customer_location ≔ ∅" org.eventb.core.label="act26"/>
<org.eventb.core.action name="_iEOeQGPaEeOMwK6AbUC7eA" org.eventb.core.assignment="booking_triptype ≔ ∅" org.eventb.core.label="act27"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AC" org.eventb.core.comment="This event registers a taxi with the system" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RegisterTaxi">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RegisterTaxi"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AD" org.eventb.core.comment="This event removes a taxi from the system" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Deregister">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="Deregister"/>
<org.eventb.core.action name="_-s6DMGQMEeOMwK6AbUC7eA" org.eventb.core.assignment="taxi_location ≔ {taxi} ⩤ taxi_location" org.eventb.core.comment="removes the taxi with its location" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AE" org.eventb.core.comment="Create the booking to the queue received from the customer with the number of passengers, the pickup location, the destination location and priority" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AddBooking">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="AddBooking"/>
<org.eventb.core.parameter name="_r7aaoGG9EeOSy_oee9yKOA" org.eventb.core.identifier="destination_location"/>
<org.eventb.core.parameter name="_r7aaoWG9EeOSy_oee9yKOA" org.eventb.core.identifier="pickup_location"/>
<org.eventb.core.guard name="_1s7QMGSrEeO0z68jQ4pw7Q" org.eventb.core.comment="booking does not have a location relation" org.eventb.core.label="grd21" org.eventb.core.predicate="booking ∉ dom(booking_location)"/>
<org.eventb.core.guard name="_HRbMgGQOEeOMwK6AbUC7eA" org.eventb.core.comment="destination_location should be of type LOCATION" org.eventb.core.label="grd22" org.eventb.core.predicate="destination_location ∈ LOCATION"/>
<org.eventb.core.guard name="_1s7QMWSrEeO0z68jQ4pw7Q" org.eventb.core.comment="pickup_location should be of type LOCATION" org.eventb.core.label="grd23" org.eventb.core.predicate="pickup_location ∈ LOCATION"/>
<org.eventb.core.guard name="_1s7QMmSrEeO0z68jQ4pw7Q" org.eventb.core.label="grd24" org.eventb.core.predicate="destination_location ≠ pickup_location"/>
<org.eventb.core.guard name="_1s7QM2SrEeO0z68jQ4pw7Q" org.eventb.core.comment="booking does not have a trip_type relation" org.eventb.core.label="grd25" org.eventb.core.predicate="booking ∉ dom(booking_triptype)"/>
<org.eventb.core.action name="_r7bBs2G9EeOSy_oee9yKOA" org.eventb.core.assignment="booking_location(booking) ≔ destination_location" org.eventb.core.comment="Add a new booking_location relation relating both booking and its destination_location" org.eventb.core.label="act8"/>
<org.eventb.core.action name="_r7bBsmG9EeOSy_oee9yKOA" org.eventb.core.assignment="customer_location(customer) ≔ pickup_location" org.eventb.core.comment="Add a new customer_location relation relating both customer and his pickup location" org.eventb.core.label="act9"/>
<org.eventb.core.action name="_BNcGAGSsEeO0z68jQ4pw7Q" org.eventb.core.assignment="booking_triptype(booking) ≔ triptype" org.eventb.core.comment="Add a new booking_triptype relation relating both booking and its triptype" org.eventb.core.label="act10"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AF" org.eventb.core.comment="set the triptype of a booking to short by calculating the distance&#10;between customer pickup location and dropoff location (destination) if less than 50" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="setTripTypetoShort">
<org.eventb.core.parameter name="_wsY2UGG9EeOSy_oee9yKOA" org.eventb.core.identifier="customer"/>
<org.eventb.core.parameter name="_wsZdYGG9EeOSy_oee9yKOA" org.eventb.core.identifier="booking"/>
<org.eventb.core.parameter name="_wsZdYWG9EeOSy_oee9yKOA" org.eventb.core.identifier="customer_pickup"/>
<org.eventb.core.parameter name="_wsZdYmG9EeOSy_oee9yKOA" org.eventb.core.identifier="customer_destination"/>
<org.eventb.core.parameter name="_wsZdY2G9EeOSy_oee9yKOA" org.eventb.core.identifier="type"/>
<org.eventb.core.parameter name="_wsZdZGG9EeOSy_oee9yKOA" org.eventb.core.identifier="trip_length"/>
<org.eventb.core.parameter name="_v8RCIGRIEeOMwK6AbUC7eA" org.eventb.core.identifier="triptypeold"/>
<org.eventb.core.guard name="_wsZdZWG9EeOSy_oee9yKOA" org.eventb.core.comment="customer is of type CUSTOMER set" org.eventb.core.label="grd1" org.eventb.core.predicate="customer ∈ CUSTOMER"/>
<org.eventb.core.guard name="_wsZdZmG9EeOSy_oee9yKOA" org.eventb.core.comment="booking is of type bookings" org.eventb.core.label="grd2" org.eventb.core.predicate="booking ∈ bookings"/>
<org.eventb.core.guard name="_wsZdZ2G9EeOSy_oee9yKOA" org.eventb.core.comment="relation booking_customer between the booking and the customer exists" org.eventb.core.label="grd3" org.eventb.core.predicate="(booking ↦ customer) ∈ booking_customer"/>
<org.eventb.core.guard name="_wsZdaGG9EeOSy_oee9yKOA" org.eventb.core.comment="relation customer_location between the customer and his current location (pickup) exists" org.eventb.core.label="grd4" org.eventb.core.predicate="(customer ↦ customer_pickup) ∈ customer_location"/>
<org.eventb.core.guard name="_I0rkMGSsEeO0z68jQ4pw7Q" org.eventb.core.comment="relation booking_location between the booking and its destination location exists" org.eventb.core.label="grd5" org.eventb.core.predicate="(booking ↦ customer_destination) ∈ booking_location"/>
<org.eventb.core.guard name="_I0sLQGSsEeO0z68jQ4pw7Q" org.eventb.core.comment="customer_pickup is of type LOCATION set" org.eventb.core.label="grd6" org.eventb.core.predicate="customer_pickup ∈ LOCATION"/>
<org.eventb.core.guard name="_I0sLQWSsEeO0z68jQ4pw7Q" org.eventb.core.comment="customer_destination is of type LOCATION set" org.eventb.core.label="grd7" org.eventb.core.predicate="customer_destination ∈ LOCATION"/>
<org.eventb.core.guard name="_wsaEc2G9EeOSy_oee9yKOA" org.eventb.core.comment="trip length is a positive natural number" org.eventb.core.label="grd8" org.eventb.core.predicate="trip_length ∈ ℕ1"/>
<org.eventb.core.guard name="_wsaEcmG9EeOSy_oee9yKOA" org.eventb.core.comment="triplength is the range of the constant function used to model distance between 2 locations" org.eventb.core.label="grd9" org.eventb.core.predicate="trip_length = distance(customer_pickup ↦ customer_destination)"/>
<org.eventb.core.guard name="_wsaEdGG9EeOSy_oee9yKOA" org.eventb.core.comment="Assume that if the distance is less than 50, then the trip is short" org.eventb.core.label="grd10" org.eventb.core.predicate="trip_length &lt; 50"/>
<org.eventb.core.guard name="_wsaEdWG9EeOSy_oee9yKOA" org.eventb.core.comment="triptype should be of type TRIP_TYPE (to use partition in context axiom)" org.eventb.core.label="grd11" org.eventb.core.predicate="type ∈ TRIP_TYPE"/>
<org.eventb.core.guard name="_wsaEdmG9EeOSy_oee9yKOA" org.eventb.core.comment="type belongs to partition subset {short}" org.eventb.core.label="grd12" org.eventb.core.predicate="type ∈ {short}"/>
<org.eventb.core.guard name="_LJzW0GQPEeOMwK6AbUC7eA" org.eventb.core.comment="triptypeold should be of type TRIP_TYPE (to use partition in context axiom)" org.eventb.core.label="grd13" org.eventb.core.predicate="triptypeold ∈ TRIP_TYPE"/>
<org.eventb.core.guard name="_Dr5U0GRREeOMwK6AbUC7eA" org.eventb.core.comment="triptypeold belongs to partition subset {empty}" org.eventb.core.label="grd14" org.eventb.core.predicate="triptypeold ∈ {empty}"/>
<org.eventb.core.guard name="_Dr574GRREeOMwK6AbUC7eA" org.eventb.core.comment="relation booking_triptype between the booking and its triptype exists" org.eventb.core.label="grd15" org.eventb.core.predicate="(booking ↦ triptypeold) ∈ booking_triptype"/>
<org.eventb.core.action name="_wsaEd2G9EeOSy_oee9yKOA" org.eventb.core.assignment="booking_triptype(booking) ≔ type" org.eventb.core.comment="Add a new booking_triptype relation relating both booking and its triptype" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AG" org.eventb.core.comment="set the triptype of a booking to long by calculating the distance&#10;between customer pickup location and dropoff location (destination) if equal or greater than 50" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="setTripTypetoLong">
<org.eventb.core.parameter name="_wsargGG9EeOSy_oee9yKOA" org.eventb.core.identifier="customer"/>
<org.eventb.core.parameter name="_wsargWG9EeOSy_oee9yKOA" org.eventb.core.identifier="booking"/>
<org.eventb.core.parameter name="_wsargmG9EeOSy_oee9yKOA" org.eventb.core.identifier="customer_pickup"/>
<org.eventb.core.parameter name="_wsarg2G9EeOSy_oee9yKOA" org.eventb.core.identifier="customer_destination"/>
<org.eventb.core.parameter name="_wsarhGG9EeOSy_oee9yKOA" org.eventb.core.identifier="type"/>
<org.eventb.core.parameter name="_wsarhWG9EeOSy_oee9yKOA" org.eventb.core.identifier="trip_length"/>
<org.eventb.core.parameter name="_1LguMGRIEeOMwK6AbUC7eA" org.eventb.core.identifier="triptypeold"/>
<org.eventb.core.guard name="_wsarhmG9EeOSy_oee9yKOA" org.eventb.core.comment="customer is of type CUSTOMER set" org.eventb.core.label="grd1" org.eventb.core.predicate="customer ∈ CUSTOMER"/>
<org.eventb.core.guard name="_wsarh2G9EeOSy_oee9yKOA" org.eventb.core.comment="booking is of type bookings" org.eventb.core.label="grd2" org.eventb.core.predicate="booking ∈ bookings"/>
<org.eventb.core.guard name="_wsariGG9EeOSy_oee9yKOA" org.eventb.core.comment="relation booking_customer between the booking and the customer exists" org.eventb.core.label="grd3" org.eventb.core.predicate="(booking ↦ customer) ∈ booking_customer"/>
<org.eventb.core.guard name="_wsariWG9EeOSy_oee9yKOA" org.eventb.core.comment="relation customer_location between the customer and his current location (pickup) exists" org.eventb.core.label="grd4" org.eventb.core.predicate="(customer ↦ customer_pickup) ∈ customer_location"/>
<org.eventb.core.guard name="_moZT8GRREeOMwK6AbUC7eA" org.eventb.core.comment="trip length is a positive natural number" org.eventb.core.label="grd8" org.eventb.core.predicate="trip_length ∈ ℕ1"/>
<org.eventb.core.guard name="_wsbSk2G9EeOSy_oee9yKOA" org.eventb.core.comment="triplength is the range of the constant function used to model distance between 2 locations" org.eventb.core.label="grd9" org.eventb.core.predicate="trip_length = distance(customer_pickup ↦ customer_destination)"/>
<org.eventb.core.guard name="_wsbSlWG9EeOSy_oee9yKOA" org.eventb.core.comment="Assume that if the distance is less than 50, then the trip is short" org.eventb.core.label="grd10" org.eventb.core.predicate="trip_length ≥ 50"/>
<org.eventb.core.guard name="_wsbSlmG9EeOSy_oee9yKOA" org.eventb.core.comment="triptype should be of type TRIP_TYPE (to use partition in context axiom)" org.eventb.core.label="grd11" org.eventb.core.predicate="type ∈ TRIP_TYPE"/>
<org.eventb.core.guard name="_wsbSl2G9EeOSy_oee9yKOA" org.eventb.core.comment="type belongs to partition subset {long}" org.eventb.core.label="grd12" org.eventb.core.predicate="type ∈ {long}"/>
<org.eventb.core.guard name="_OPXa8GROEeOMwK6AbUC7eA" org.eventb.core.comment="triptypeold should be of type TRIP_TYPE (to use partition in context axiom)" org.eventb.core.label="grd13" org.eventb.core.predicate="triptypeold ∈ TRIP_TYPE"/>
<org.eventb.core.guard name="_OPXa8WROEeOMwK6AbUC7eA" org.eventb.core.comment="triptypeold belongs to partition subset {empty}" org.eventb.core.label="grd14" org.eventb.core.predicate="triptypeold ∈ {empty}"/>
<org.eventb.core.guard name="_OPXa8mROEeOMwK6AbUC7eA" org.eventb.core.comment="relation booking_triptype between the booking and its triptype exists" org.eventb.core.label="grd15" org.eventb.core.predicate="(booking ↦ triptypeold) ∈ booking_triptype"/>
<org.eventb.core.guard name="_lIDTMGSsEeO0z68jQ4pw7Q" org.eventb.core.comment="relation booking_location between the booking and its destination location exists" org.eventb.core.label="grd16" org.eventb.core.predicate="(booking ↦ customer_destination) ∈ booking_location"/>
<org.eventb.core.guard name="_lIDTMWSsEeO0z68jQ4pw7Q" org.eventb.core.comment="customer_pickup is of type LOCATION set" org.eventb.core.label="grd17" org.eventb.core.predicate="customer_pickup ∈ LOCATION"/>
<org.eventb.core.guard name="_lIDTMmSsEeO0z68jQ4pw7Q" org.eventb.core.label="grd18" org.eventb.core.predicate="customer_destination ∈ LOCATION"/>
<org.eventb.core.action name="_wsb5oGG9EeOSy_oee9yKOA" org.eventb.core.assignment="booking_triptype(booking) ≔ type" org.eventb.core.comment="Add a new booking_triptype relation relating both booking and its triptype" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_7Ha6IGPTEeOMwK6AbUC7eA" org.eventb.core.comment="sets the current location of the taxi for distance calculation" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SetCurrentTaxiLocation">
<org.eventb.core.parameter name="_Kl9rwGPUEeOMwK6AbUC7eA" org.eventb.core.identifier="taxi"/>
<org.eventb.core.parameter name="_Kl9rwWPUEeOMwK6AbUC7eA" org.eventb.core.identifier="location"/>
<org.eventb.core.guard name="_Kl9rwmPUEeOMwK6AbUC7eA" org.eventb.core.comment="taxi must be registered" org.eventb.core.label="grd1" org.eventb.core.predicate="taxi ∈ registered_taxis"/>
<org.eventb.core.guard name="_Kl-S0GPUEeOMwK6AbUC7eA" org.eventb.core.comment="location must be of type LOCATION set" org.eventb.core.label="grd2" org.eventb.core.predicate="location ∈ LOCATION"/>
<org.eventb.core.action name="_Kl-S0WPUEeOMwK6AbUC7eA" org.eventb.core.assignment="taxi_location(taxi) ≔ location" org.eventb.core.comment="adds relation taxi_location of a taxi and its location" org.eventb.core.label="act1"/>
</org.eventb.core.event>
<org.eventb.core.event name="_GJr1EGPREeOMwK6AbUC7eA" org.eventb.core.comment="used to construct the pool of nearby taxis which are near to the customer" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="ConstructNearByTaxisPool">
<org.eventb.core.refinesEvent name="_fGBIQGP8EeOMwK6AbUC7eA" org.eventb.core.target="ConstructNearByTaxisPool"/>
<org.eventb.core.parameter name="_S6T9AWPTEeOMwK6AbUC7eA" org.eventb.core.identifier="taxiLocation"/>
<org.eventb.core.parameter name="_S6T9A2PTEeOMwK6AbUC7eA" org.eventb.core.identifier="customerLocation"/>
<org.eventb.core.parameter name="_q6MoIGPUEeOMwK6AbUC7eA" org.eventb.core.identifier="length"/>
<org.eventb.core.guard name="_gM_HYGSsEeO0z68jQ4pw7Q" org.eventb.core.comment="taxiLocation must be of tyoe LOCATION set" org.eventb.core.label="grd5" org.eventb.core.predicate="taxiLocation ∈ LOCATION"/>
<org.eventb.core.guard name="_S6UkFGPTEeOMwK6AbUC7eA" org.eventb.core.comment="customerLocation must be of tyoe LOCATION set" org.eventb.core.label="grd6" org.eventb.core.predicate="customerLocation ∈ LOCATION"/>
<org.eventb.core.guard name="_S6UkFWPTEeOMwK6AbUC7eA" org.eventb.core.comment="relation between a taxi and its location should exists" org.eventb.core.label="grd7" org.eventb.core.predicate="(taxi ↦ taxiLocation) ∈ taxi_location"/>
<org.eventb.core.guard name="_S6UkFmPTEeOMwK6AbUC7eA" org.eventb.core.comment="relation between a customer and his location should exists" org.eventb.core.label="grd8" org.eventb.core.predicate="(customer ↦ customerLocation) ∈ customer_location"/>
<org.eventb.core.guard name="_q6NPMGPUEeOMwK6AbUC7eA" org.eventb.core.comment="length must be a positive natural number" org.eventb.core.label="grd9" org.eventb.core.predicate="length ∈ ℕ1"/>
<org.eventb.core.guard name="_gM_ucGSsEeO0z68jQ4pw7Q" org.eventb.core.comment="Assume that taxis with 20 length units are nearby" org.eventb.core.label="grd10" org.eventb.core.predicate="length ≤ 20"/>
</org.eventb.core.event>
<org.eventb.core.event name="_V0xXcGPdEeOMwK6AbUC7eA" org.eventb.core.comment="a booking can be added to a queue of bookings" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AddBookingtoQueue">
<org.eventb.core.refinesEvent name="_InmgoGPfEeOMwK6AbUC7eA" org.eventb.core.target="AddBookingtoQueue"/>
</org.eventb.core.event>
<org.eventb.core.event name="_EuoPgGPVEeOMwK6AbUC7eA" org.eventb.core.comment="Allocate a taxi to a booking directly with a full response" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AllocateFullTaxiBookingDirect">
<org.eventb.core.refinesEvent name="_beOWwGTvEeOu3s7xa_4yiA" org.eventb.core.target="AllocateFullTaxiBookingDirect"/>
</org.eventb.core.event>
<org.eventb.core.event name="_EuoPgmPVEeOMwK6AbUC7eA" org.eventb.core.comment="Allocate a taxi to a booking from the queue with a full response" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AllocateFullTaxiBookingFromQueue">
<org.eventb.core.refinesEvent name="_KdeLgGTvEeOu3s7xa_4yiA" org.eventb.core.target="AllocateFullTaxiBookingFromQueue"/>
</org.eventb.core.event>
<org.eventb.core.event name="_OXwwUGP-EeOMwK6AbUC7eA" org.eventb.core.comment="Allocate a taxi to a booking directly with a reduced response" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AllocateReducedTaxiBookingDirect">
<org.eventb.core.refinesEvent name="_beOWwWTvEeOu3s7xa_4yiA" org.eventb.core.target="AllocateReducedTaxiBookingDirect"/>
</org.eventb.core.event>
<org.eventb.core.event name="_FCrQQGP-EeOMwK6AbUC7eA" org.eventb.core.comment="Allocate a taxi to a booking from the queue with a reduced response" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AllocateReducedTaxiBookingFromQueue">
<org.eventb.core.refinesEvent name="_KdeykGTvEeOu3s7xa_4yiA" org.eventb.core.target="AllocateReducedTaxiBookingFromQueue"/>
</org.eventb.core.event>
<org.eventb.core.event name="_P7YFEGHCEeOMZ_9HrMlueQ" org.eventb.core.comment="driver accepts a booking request so the status of the booking changes from open to accept" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AcceptBookingRequest">
<org.eventb.core.refinesEvent name="_P7YFEWHCEeOMZ_9HrMlueQ" org.eventb.core.target="AcceptBookingRequest"/>
</org.eventb.core.event>
<org.eventb.core.event name="_sRIhoGSfEeOMwK6AbUC7eA" org.eventb.core.comment="The driver declines the booking request after accepting it" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="DriverDeclineRequest">
<org.eventb.core.refinesEvent name="_sRIhoWSfEeOMwK6AbUC7eA" org.eventb.core.target="DriverDeclineRequest"/>
</org.eventb.core.event>
<org.eventb.core.event name="_P7YFEmHCEeOMZ_9HrMlueQ" org.eventb.core.comment="adds the booking declined by the driver to the declined_bookings set" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="DeclineBookingRequest">
<org.eventb.core.refinesEvent name="_P7YFE2HCEeOMZ_9HrMlueQ" org.eventb.core.target="DeclineBookingRequest"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AK" org.eventb.core.comment="this event penalizes the taxi according to the conditions" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="PenalizeTaxi">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="PenalizeTaxi"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zNWMMGSnEeOMwK6AbUC7eA" org.eventb.core.comment="removes the taxis from the penalized list at preference" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RemoveFromPenalised">
<org.eventb.core.refinesEvent name="_zNWMMWSnEeOMwK6AbUC7eA" org.eventb.core.target="RemoveFromPenalised"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AL" org.eventb.core.comment="add a customer with his pending booking to the waiting list if he requested a full response" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AddtoWaitingList">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="AddtoWaitingList"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AM" org.eventb.core.comment="removes a customer with his booking from the waiting list" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RemoveFromWaitingList">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RemoveFromWaitingList"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AN" org.eventb.core.comment="change booking status from accept to coming" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="comingToCustomer">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="comingToCustomer"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AO" org.eventb.core.comment="change booking status from coming to picked" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="pickedUpCustomer">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="pickedUpCustomer"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AP" org.eventb.core.comment="change booking status from picked to delivered" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="DeliveredCustomer">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="DeliveredCustomer"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AQ" org.eventb.core.comment="adds a reduced warning to the reduced_warnings list" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AlertReducedWarning">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="AlertReducedWarning"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AR" org.eventb.core.comment="removes a reduced warning from the reduced_warnings list" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RemoveReducedWarning">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RemoveReducedWarning"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AS" org.eventb.core.comment="adds a non allocation warning to the nonallocation_warnings list" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AlertNoAllocationWarning">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="AlertNoAllocationWarning"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AT" org.eventb.core.comment="removes a non allocation warning from the nonallocation_warnings list" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RemoveNoAllocationWarning">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RemoveNoAllocationWarning"/>
</org.eventb.core.event>
<org.eventb.core.event name="_gOZ8cGC2EeO1XKzafDR8AU" org.eventb.core.comment="After customer is delivered, booking is removed from the system and removing all its relations" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RemoveBooking">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RemoveBooking"/>
<org.eventb.core.action name="_56oecGP1EeOMwK6AbUC7eA" org.eventb.core.assignment="booking_location ≔ {booking} ⩤ booking_location" org.eventb.core.comment="remove from booking_location using domain subtraction by the booking" org.eventb.core.label="act11"/>
<org.eventb.core.action name="_M8PHIGP2EeOMwK6AbUC7eA" org.eventb.core.assignment="customer_location ≔ {customer} ⩤ customer_location" org.eventb.core.comment="remove from customer_location using domain subtraction by the booking" org.eventb.core.label="act12"/>
<org.eventb.core.action name="_biIsYGStEeO0z68jQ4pw7Q" org.eventb.core.assignment="booking_triptype ≔ {booking} ⩤ booking_triptype" org.eventb.core.comment="remove from booking_triptype using domain subtraction by the booking" org.eventb.core.label="act13"/>
</org.eventb.core.event>
<org.eventb.core.variable name="_yEH1AGPQEeOMwK6AbUC7eA" org.eventb.core.comment="pool containing the nearby taxi with respect to the customer" org.eventb.core.identifier="nearby_taxis_pool"/>
<org.eventb.core.invariant name="_e5dfcGSrEeO0z68jQ4pw7Q" org.eventb.core.comment="One to one relation between a booking and the destination location (where the customer wants to go)" org.eventb.core.label="inv24" org.eventb.core.predicate="booking_location ∈ BOOKING ⤔ LOCATION"/>
<org.eventb.core.invariant name="_e5dfcWSrEeO0z68jQ4pw7Q" org.eventb.core.comment="One to one relation between a taxi and its location" org.eventb.core.label="inv25" org.eventb.core.predicate="taxi_location ∈ registered_taxis ⤔ LOCATION"/>
<org.eventb.core.invariant name="_pgwqwGSqEeOMwK6AbUC7eA" org.eventb.core.comment="One to one relation between a customer and his/her location (where the customer will be picked from)" org.eventb.core.label="inv26" org.eventb.core.predicate="customer_location ∈ CUSTOMER ⤔ LOCATION"/>
<org.eventb.core.invariant name="_pgxR0GSqEeOMwK6AbUC7eA" org.eventb.core.comment="One to one relation between a booking and its trip type (long, short)" org.eventb.core.label="inv27" org.eventb.core.predicate="booking_triptype ∈ BOOKING ⤔ TRIP_TYPE"/>
<org.eventb.core.event name="_LUZEQGUiEeOu3s7xa_4yiA" org.eventb.core.comment="changes the priority of a normal booking in the waiting list to high" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="ChangeBookingPrioritytoHigh">
<org.eventb.core.refinesEvent name="_LUZEQWUiEeOu3s7xa_4yiA" org.eventb.core.target="ChangeBookingPrioritytoHigh"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
